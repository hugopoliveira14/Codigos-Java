EXERCICIO - ESTRUTURA SEQUENCIAL

1-Faça um Programa que mostre a mensagem "Alo mundo" na tela.

public class App {
    public static void main(String[] args) throws Exception {
        System.out.println("Alo, Mundo!");
    }
}

2-Faça um Programa que peça um número e então mostre a mensagem O número informado foi [número].

import java.util.Scanner;
public class App {public static void main (String[] args) {
    Scanner ler = new Scanner(System.in);
    int n;
    System.out.println("informe o n");
    n = ler.nextInt();
    System.out.println("O número é:" + n);
   }
}

3-Faça um Programa que peça dois números e imprima a soma.

import java.util.Scanner; 
class Main {
   public static void main( String[] args ) {
      int a, b, c = 0;
      Scanner s = new Scanner( System.in );
      System.out.println( "Digite dois números: ");
      a = s.nextInt();
      b = s.nextInt();
      c = a + b;
      System.out.println( "A soma de a e b é: " + c );
   }
}

4-Faça um Programa que peça as 4 notas bimestrais e mostre a média.

import java.util.Scanner;
 
class Main {
 
   public static void main( String[] args ) {
      int a, b, c, d, e = 0;
      Scanner s = new Scanner( System.in );
      System.out.println( "Digite a nota dos 4 bimestres: ");
      a = s.nextInt();
      b = s.nextInt();
      c = s.nextInt();
      d = s.nextInt();
      e = (a+b+c+d) / 4
      System.out.println( "A média de a, b, c, d é: " + e );
   }
 
}

5-Faça um Programa que converta metros para centímetros.

import java.util.Scanner;

public class Conversor {
	
 public static void main(String args[]){

  Scanner entrada = new Scanner(System.in);

  System.out.print("Metros? ");
  float metros = entrada.nextFloat();

  float centimetros = metros * 100;

  System.out.printf("%.1f cm",centimetros);

 }

}

6-Faça um Programa que peça o raio de um círculo, calcule e mostre sua área.

import java.util.Scanner;

class Main {

    public static void main(String[] args) {
       System.out.println("Escreva o valor do raio");
       Scanner scan = new Scanner(System.in);

       double raio = scan.nextInt();
       double area = Math.PI * raio * raio;

       System.out.println("O valor da area é " + area);
    }
}

7-Faça um Programa que calcule a área de um quadrado, em seguida mostre o dobro desta área para o usuário.

import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    System.out.println("Digite o valor da lateral do quadrado: ");
    float lado = new Scanner(System.in).nextFloat();
    System.out.println("O dobro da area do quadrado eh de: " + ((lado * lado) * 2) );
  }
}

8-Faça um Programa que pergunte quanto você ganha por hora e o número de horas trabalhadas no mês. Calcule e mostre o total do seu salário no referido mês.

import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    System.out.println("Digite o valor da sua hora de trabalho: ");
    float valordahora = new Scanner(System.in).nextFloat();
    System.out.println("Digite quantas horas voce trabalha por dia: ");
    int horastrabalhadas = new Scanner(System.in).nextInt();
    int quantidadededias = 22; //estimativa de dias úteis em um mês
    System.out.printf("O seu salario, em um mes, eh de: %.2f", (valordahora * horastrabalhadas) * quantidadededias);
  }
}

9-Faça um Programa que peça a temperatura em graus Fahrenheit, transforme e mostre a temperatura em graus Celsius.
C = 5 * ((F-32) / 9).

import java.util.Scanner;
public class Main{
    
    public static void main(String[]args){
        System.out.println("Digite o grau Farenheit:");
        double f = new Scanner(System.in).nextFloat();
        System.out.printf("O grau celsius é: %.2f",(5*((f-32)/9)));  
    }
}

10- Faça um Programa que peça a temperatura em graus Celsius, transforme e mostre em graus Fahrenheit.

import java.util.Scanner;
public class Main{
    
    public static void main(String[]args){
        System.out.println("Digite o grau Celsius:");
        double c = new Scanner(System.in).nextFloat();
        System.out.printf("O grau Farenheit é: %.2f",(c * 1.8) + 32);
    }
}

11- Faça um Programa que peça 2 números inteiros e um número real. Calcule e mostre:
a- o produto do dobro do primeiro com metade do segundo .
b- a soma do triplo do primeiro com o terceiro.
c- o terceiro elevado ao cubo.

import java.util.Scanner;
public class Main {

    public static void main(String[]args){
    float a,b,c;
    
    System.out.println("Informe um número inteiro:");
    int n1 = new Scanner(System.in).nextInt();
    System.out.println("Informe um número inteiro:");
    int n2 = new Scanner(System.in).nextInt();
    System.out.println("Informe um número real:");
    float n3 = new Scanner(System.in).nextFloat();
    
    a = (2*n1)*(n2/2);
    b = (3*n1)+n3;
    c = n3*n3*n3;
    
    System.out.printf("O produto do dobro do primeiro com metade do segundo é igual a %.2f",a);
    System.out.printf("A soma do triplo do primeiro com o terceiro é igual a %.2f",b);
    System.out.printf("O terceiro elevado ao cubo é igual a %.2f",c);
 }
}

12- Tendo como dados de entrada a altura de uma pessoa, construa um algoritmo que calcule seu peso ideal, usando a seguinte fórmula: (72.7*altura) - 58

import java.util.Scanner;
public class Main{

    public static void main(String[] args) {
      Scanner entrada = new Scanner(System.in);
      double Altura,PesoIdeal;
      System.out.print("Digite sua altura (em metros): ");
      Altura = entrada.nextDouble();
      PesoIdeal = ( 72.7* Altura ) - 58;
      System.out.println("Seu peso ideal é de: "+PesoIdeal+" kg.");
    }
}

13- Tendo como dado de entrada a altura (h) de uma pessoa, construa um algoritmo que calcule seu peso ideal, utilizando as seguintes fórmulas:
a- Para homens: (72.7*h) - 58
b- Para mulheres: (62.1*h) - 44.7

import java.util.Scanner;
 public class Main{

public static void main(String[] args) {
      Scanner entrada = new Scanner(System.in);
      double Altura,PesoIdeal;
	    char Sexo='n';

  		System.out.print("Digite sua altura (em metros): ");
      Altura = entrada.nextDouble();

      while(Sexo !='m' && Sexo !='M' && Sexo !='h' && Sexo !='H'){

        System.out.print("Digite H ou M para especificar o sexo: "); // o/
        Sexo = entrada.next(".").charAt(0);

        switch(Sexo){
          case 'h':
          case 'H':
            PesoIdeal = ( 72.7* Altura ) - 58;
            System.out.println("Seu peso ideal é de: "+PesoIdeal+" kg.");
            break;
          case 'm':
          case 'M':
            PesoIdeal = ( 62.1 * Altura ) - 44.7;
            System.out.println("Seu peso ideal é de: "+PesoIdeal+" kg.");
            break;
          default:
            System.out.println("Não é M");
        }

      }
	}
}

14- João Papo-de-Pescador, homem de bem, comprou um microcomputador para controlar o rendimento diário de seu trabalho. Toda vez que ele traz um peso de peixes maior 
que o estabelecido pelo regulamento de pesca do estado de São Paulo (50 quilos) deve pagar uma multa de R$ 4,00 por quilo excedente. João precisa que você faça um
programa que leia a variável peso (peso de peixes) e calcule o excesso. Gravar na variável excesso a quantidade de quilos além do limite e na variável multa o valor 
da multa que João deverá pagar. Imprima os dados do programa com as mensagens adequadas.

import java.util.Scanner;

public class CalculoMultaPesoPeixes {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Informe o peso dos peixes em quilos: ");
        double peso = scanner.nextDouble();

        double limite = 50.0;
        double excesso = 0.0;
        double multa = 0.0;

        if (peso > limite) {
            excesso = peso - limite;
            multa = excesso * 4.0;
            System.out.println("Excesso de peso: " + excesso + " kg");
            System.out.println("Multa a pagar: R$" + multa);
        } else {
            System.out.println("Não houve excesso de peso. Nenhuma multa é devida.");
        }

        scanner.close();
    }
}

15-Faça um Programa que pergunte quanto você ganha por hora e o número de horas trabalhadas no mês. Calcule e mostre o total do seu salário no referido mês,
sabendo-se que são descontados 11% para o Imposto de Renda, 8% para o INSS e 5% para o sindicato, faça um programa que nos dê:
a.salário bruto.
b. quanto pagou ao INSS.
c. quanto pagou ao sindicato.
d. o salário líquido.
e. calcule os descontos e o salário líquido, conforme a tabela abaixo:
+ Salário Bruto : R$
- IR (11%) : R$
- INSS (8%) : R$
- Sindicato ( 5%) : R$
= Salário Liquido : R$
Obs.: Salário Bruto - Descontos = Salário Líquido.

import java.util.Scanner;
public class Main{

 public static void mani(String[] args) {
     float salario_bruto, ir, inss, sindicato;
 System.out.println("Quanto ganha por hora? ");
 float qnt_ganha = new Scanner(System.in).nextFloat();
 System.out.println("Horas trabalhadas por mês: ");
 float horas_trabalhadas =new Scanner(System.in).nextFloat();

 salario_bruto = qnt_ganha * horas_trabalhadas;
 ir = salario_bruto;
 inss = salario_bruto;
 sindicato = salario_bruto;

 System.out.printf("+ Salário Bruto : R$ %.2f" + salario_bruto*0.05);
 System.out.printf("- IR: R$ %.2f" + ir*0.11);
 System.out.printf("- INSS: R$ %.2f" + inss*0.08);
 System.out.printf("- Sindicato: R$ %.2f" + sindicato*0.05);
 System.out.printf("= Salário Liquido : R$ %.2f" + (salario_bruto - ir - inss - sindicato));
 }
}

16-Faça um programa para uma loja de tintas. O programa deverá pedir o tamanho em metros quadrados da área a ser pintada. Considere que a cobertura da tinta é de 1
litro para cada 3 metros quadrados e que a tinta é vendida em latas de 18 litros, que custam R$ 80,00. Informe ao usuário a quantidades de latas de tinta a serem 
compradas e o preço total.

import java.util.Scanner;
public class Main{

 public static void main(String[] args){
System.out.println("Entre com o tamanho da área: ");

litros = tamanho / 6;
latas = litros / 18;

if (latas % 18 != 0) {
    latas += 1;
preco = latas * 80;
}

System.out.printf(()"Apenas latas de 18 litros: %d" + latas), (preco:%d + preco);
  }
}

17- Faça um Programa para uma loja de tintas. O programa deverá pedir o tamanho em metros quadrados da área a ser pintada. Considere que a cobertura da tinta é de 1 litro para cada 6 metros quadrados e que a tinta é vendida em latas de 18 litros, que custam R$ 80,00 ou em galões de 3,6 litros, que custam R$ 25,00.
Informe ao usuário as quantidades de tinta a serem compradas e os respectivos preços em 3 situações:
º comprar apenas latas de 18 litros;
º comprar apenas galões de 3,6 litros;
º misturar latas e galões, de forma que o desperdício de tinta seja menor. Acrescente 10% de folga e sempre arredonde os valores para cima, isto é, considere latas
cheias.

import java.util.Scanner;
public class Main{

 public static void main(String[] args){
System.out.println("Entre com o tamanho da área: ");

litros = tamanho / 6;
latas = litros / 18;

if (latas % 18 != 0) {
    latas += 1;
preco = latas * 80;
}
if (galoes = litros / 3.6) {
 galoes % 3.6 != 0:
    galoes += 1
preco2 = galoes * 25
}
System.out.printf(()"Apenas latas de 18 litros: %d" + latas), (preco:%d + preco);
System.out.printf(()"Apenas galões de 3.6 litros: %d" % galoes, (preço: %d'% preco2);
  }
}

18-Faça um programa que peça o tamanho de um arquivo para download (em MB) e a velocidade de um link de Internet (em Mbps), calcule e informe o tempo aproximado de
download do arquivo usando este link (em minutos).

import java.util.Scanner;
public class Main{

 public static void main(String[] args){


 System.out.println("Tamanho do arquivo (MB):");
 float tamanho= new Scanner(System.in).nextFloat();
 System.out.println("Velocidade de Internet (MBps)");
 float velocidade = new Scanner(System.in).nextFloat();
 System.out.println("Tempo aproximado de download: " + (tamanho / velocidade) * 60);
 }
}


 EXERCÍCIO - ESTRUTURA DE DECISÃO
				    
1) Faça um Programa que peça dois números e imprima o maior deles.

import java.util.Scanner;

public class Main{

	public static void main(String[] args) {
	Scanner ler = new Scanner(System.in);
		int n1,n2 = 0;
	System.out.println("digite 2 números:");
	n1 = ler.nextInt();
	n2 = ler.nextInt();
	
	if (n1>n2){
	    System.out.println("maior valor é:" + n1);
	}else{ 
	    System.out.println("maior valor é:" + n2);
	}
     }
  }
  
  
2) Faça um Programa que peça um valor e mostre na tela se o valor é positivo ou negativo.
  
import java.util.Scanner;

public class Main{

	public static void main(String[] args) {
	Scanner ler = new Scanner(System.in);
		int n1 = 0;
	System.out.println("digite 1 número:");
	n1 = ler.nextInt();
	
	if (n1 >= 0){
	    System.out.println("o valor é positivo:" + n1);
	}else{ 
	    System.out.println("o valor é negativo:" + n1);
	}
     }
  }
  
 3) Faça um Programa que verifique se uma letra digitada é "F" ou "M". Conforme a letra escrever: F - Feminino, M - Masculino, Sexo Inválido.
                                         
import java.util.Scanner;

public class Main{

	public static void main(String[] args) {
	Scanner ler = new Scanner(System.in);
		double letra = 0;
	System.out.println("digite a letra:");
	letra = ler.nextDouble();
	
	 if (letra == 'F' || letra == 'f') {
            System.out.println("F - Feminino" + letra);
            
  }else if (letra == 'M' || letra == 'm') {
            System.out.println("M - Masculino" + letra);
  } else {
            System.out.println("Letra inválida. Por favor, digite 'F' ou 'M'." + letra);
   }
 }
}

4) Faça um Programa que verifique se uma letra digitada é vogal ou consoante.

import java.util.Scanner;

public class Main{

	public static void main(String[] args) {
	Scanner ler = new Scanner(System.in);
		double letra = 0;
	System.out.println("digite a letra:");
	letra = ler.nextDouble();
	
	 if (letra == 'a' || letra == 'e' || letra == 'i' || letra == 'o' || letra == 'u') {
            System.out.println("" + letra);
            
  }else{
            System.out.println("Consoante" + letra);
  
   }
 }
}

5) Faça um programa para a leitura de duas notas parciais de um aluno. O programa deve calcular a média alcançada por aluno e apresentar:
A mensagem "Aprovado", se a média alcançada for maior ou igual a sete;
A mensagem "Reprovado", se a média for menor do que sete;
A mensagem "Aprovado com Distinção", se a média for igual a dez.

import java.util.Scanner;
 
class Main {
 
   public static void main( String[] args ) {
      int a, b, c = 0;
      Scanner s = new Scanner( System.in );
      System.out.println( "Digite a nota dos 2 bimestres: ");
      a = s.nextInt();
      b = s.nextInt();
      c = (a+b) / 2;
      
   if (c == 10) {
            System.out.println("Aprovado com Distinção" + c );
            
  }else if (c >= 7) {
            System.out.println("Aprovado" + c);
  } else {
            System.out.println("Reprovado" + c);
   }
 }
}

6) Faça um Programa que leia três números e mostre o maior deles.

import java.util.Scanner;

public class MaiorNumero {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Digite o primeiro número: ");
        int numero1 = scanner.nextInt();
        
        System.out.print("Digite o segundo número: ");
        int numero2 = scanner.nextInt();
        
        System.out.print("Digite o terceiro número: ");
        int numero3 = scanner.nextInt();
        
        int maior = Math.max(numero1, Math.max(numero2, numero3));
        
        System.out.println("O maior número é: " + maior);
    }
}

7) Faça um Programa que leia três números e mostre o maior e o menor deles.

import java.util.Scanner;

public class MaiorMenorNumero {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Digite o primeiro número: ");
        int numero1 = scanner.nextInt();
        
        System.out.print("Digite o segundo número: ");
        int numero2 = scanner.nextInt();
        
        System.out.print("Digite o terceiro número: ");
        int numero3 = scanner.nextInt();
        
        int maior = Math.max(numero1, Math.max(numero2, numero3));
        
        int menor = Math.min(numero1, Math.max(numero2, numero3));
        
        System.out.println("O maior número é: " + maior);
        
        System.out.println("O menor número é: " + menor);
    }
}

8) Faça um programa que pergunte o preço de três produtos e informe qual produto você deve comprar, sabendo que a decisão é sempre pelo mais barato.

import java.util.Scanner;

public class CompraProduto {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Digite o preço do primeiro produto: ");
        double preco1 = scanner.nextDouble();
        
        System.out.print("Digite o preço do segundo produto: ");
        double preco2 = scanner.nextDouble();
        
        System.out.print("Digite o preço do terceiro produto: ");
        double preco3 = scanner.nextDouble();
        
        if (preco1 < preco2 && preco1 < preco3) {
            System.out.println("Você deve comprar o primeiro produto.");
        } else if (preco2 < preco1 && preco2 < preco3) {
            System.out.println("Você deve comprar o segundo produto.");
        } else if (preco3 < preco1 && preco3 < preco2) {
            System.out.println("Você deve comprar o terceiro produto.");
        } else {
            System.out.println("Os preços dos produtos são iguais. Escolha o que preferir.");
        }
    }
}

9) Faça um Programa que leia três números e mostre-os em ordem decrescente.

import java.util.Scanner;

public class NumerosDecrescentes {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Digite o primeiro número: ");
        int numero1 = scanner.nextInt();
        
        System.out.print("Digite o segundo número: ");
        int numero2 = scanner.nextInt();
        
        System.out.print("Digite o terceiro número: ");
        int numero3 = scanner.nextInt();
        
        if (numero1 >= numero2 && numero1 >= numero3) {
            if (numero2 >= numero3) {
                System.out.println(numero1 + ", " + numero2 + ", " + numero3);
            } else {
                System.out.println(numero1 + ", " + numero3 + ", " + numero2);
            }
        } else if (numero2 >= numero1 && numero2 >= numero3) {
            if (numero1 >= numero3) {
                System.out.println(numero2 + ", " + numero1 + ", " + numero3);
            } else {
                System.out.println(numero2 + ", " + numero3 + ", " + numero1);
            }
        } else {
            if (numero1 >= numero2) {
                System.out.println(numero3 + ", " + numero1 + ", " + numero2);
            } else {
                System.out.println(numero3 + ", " + numero2 + ", " + numero1);
            }
        }
    }
}

10) Faça um Programa que pergunte em que turno você estuda. Peça para digitar M-matutino ou V-Vespertino ou N- Noturno. Imprima a mensagem "Bom Dia!", "Boa Tarde!" ou "Boa Noite!" ou "Valor Inválido!", conforme o caso.

import java.util.Scanner;

public class SaudacaoTurnoEstudo {
  
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Em qual turno você estuda? Digite M-matutino, V-vespertino ou N-noturno: ");
        String turno = scanner.nextLine();

        if (turno.equalsIgnoreCase("M")) {
            System.out.println("Bom Dia!");
        } else if (turno.equalsIgnoreCase("V")) {
            System.out.println("Boa Tarde!");
        } else if (turno.equalsIgnoreCase("N")) {
            System.out.println("Boa Noite!");
        } else {
            System.out.println("Valor Inválido!");
        }
    }
}

11) As Organizações Tabajara resolveram dar um aumento de salário aos seus colaboradores e lhe contraram para desenvolver o programa que calculará os reajustes.
Faça um programa que recebe o salário de um colaborador e o reajuste segundo o seguinte critério, baseado no salário atual:
salários até R$ 280,00 (incluindo) : aumento de 20%
salários entre R$ 280,00 e R$ 700,00 : aumento de 15%
salários entre R$ 700,00 e R$ 1500,00 : aumento de 10%
salários de R$ 1500,00 em diante : aumento de 5% Após o aumento ser realizado, informe na tela:
o salário antes do reajuste;
o percentual de aumento aplicado;
o valor do aumento;
o novo salário, após o aumento.

import java.util.Scanner;

public class CalculoReajusteSalario {
  
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite o salário do colaborador: ");
        double salarioColaborador = scanner.nextDouble();

        double percentualAumento;
        if (salarioColaborador <= 280) {
            percentualAumento = 20;
        } else if (salarioColaborador <= 700) {
            percentualAumento = 15;
        } else if (salarioColaborador <= 1500) {
            percentualAumento = 10;
        } else {
            percentualAumento = 5;
        }

        double aumento = salarioColaborador * (percentualAumento / 100);
        double novoSalario = salarioColaborador + aumento;

        System.out.println("Salário antes do reajuste: R$ " + salarioColaborador);
        System.out.println("Percentual de aumento aplicado: " + percentualAumento + "%");
        System.out.println("Valor do aumento: R$ " + aumento);
        System.out.println("Novo salário após o aumento: R$ " + novoSalario);
    }
}

12) Faça um programa para o cálculo de uma folha de pagamento, sabendo que os descontos são do Imposto de Renda, que depende do salário bruto (conforme tabela abaixo) e 3% para o Sindicato e que o FGTS corresponde a 11% do Salário Bruto, mas não é descontado (é a empresa que deposita). 
O Salário Líquido corresponde ao Salário Bruto menos os descontos. O programa deverá pedir ao usuário o valor da sua hora e a quantidade de horas trabalhadas no mês.
Desconto do IR:
Salário Bruto até 900 (inclusive) - isento
Salário Bruto até 1500 (inclusive) - desconto de 5%
Salário Bruto até 2500 (inclusive) - desconto de 10%
Salário Bruto acima de 2500 - desconto de 20% Imprima na tela as informações, dispostas conforme o exemplo abaixo. No exemplo o valor da hora é 5 e a quantidade de hora é 220.

import java.util.Scanner;

public class CalculoFolhaPagamento {
  
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite o valor da hora trabalhada: ");
        double valorHora = scanner.nextDouble();

        System.out.print("Digite a quantidade de horas trabalhadas no mês: ");
        int horasTrabalhadas = scanner.nextInt();

        double salarioBruto = valorHora * horasTrabalhadas;
        double fgts = salarioBruto * 0.11;
        double sindicato = salarioBruto * 0.03;

        double descontoIr;
        if (salarioBruto <= 900) {
            descontoIr = 0;
        } else if (salarioBruto <= 1500) {
            descontoIr = salarioBruto * 0.05;
        } else if (salarioBruto <= 2500) {
            descontoIr = salarioBruto * 0.10;
        } else {
            descontoIr = salarioBruto * 0.20;
        }

        double salarioLiquido = salarioBruto - descontoIr - sindicato;

        System.out.println("Salário Bruto: R$ " + salarioBruto);
        System.out.println("Desconto do Imposto de Renda: R$ " + descontoIr);
        System.out.println("Desconto do Sindicato: R$ " + sindicato);
        System.out.println("FGTS: R$ " + fgts);
        System.out.println("Salário Líquido: R$ " + salarioLiquido);
    }
}

13) Faça um Programa que leia um número e exiba o dia correspondente da semana. (1-Domingo, 2- Segunda, etc.), se digitar outro valor deve aparecer valor inválido.

import java.util.Scanner;

public class DiaSemana {
  
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite um número de 1 a 7: ");
        int numero = scanner.nextInt();

        String diaSemana;
        switch (numero) {
            case 1:
                diaSemana = "Domingo";
                break;
            case 2:
                diaSemana = "Segunda-feira";
                break;
            case 3:
                diaSemana = "Terça-feira";
                break;
            case 4:
                diaSemana = "Quarta-feira";
                break;
            case 5:
                diaSemana = "Quinta-feira";
                break;
            case 6:
                diaSemana = "Sexta-feira";
                break;
            case 7:
                diaSemana = "Sábado";
                break;
            default:
                diaSemana = "Valor inválido";
                break;
        }

        System.out.println("Dia da semana correspondente: " + diaSemana);
    }
}

14) Faça um programa que lê as duas notas parciais obtidas por um aluno numa disciplina ao longo de um semestre, e calcule a sua média. A atribuição de conceitos obedece à tabela abaixo:
  Média de Aproveitamento  Conceito
  Entre 9.0 e 10.0        A
  Entre 7.5 e 9.0         B
  Entre 6.0 e 7.5         C
  Entre 4.0 e 6.0         D
  Entre 4.0 e zero        E
O algoritmo deve mostrar na tela as notas, a média, o conceito correspondente e a mensagem “APROVADO” se o conceito for A, B ou C ou “REPROVADO” se o conceito for D ou E.

import java.util.Scanner;

public class CalculoMediaConceito {
  
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite a primeira nota: ");
        double nota1 = scanner.nextDouble();

        System.out.print("Digite a segunda nota: ");
        double nota2 = scanner.nextDouble();

        double media = (nota1 + nota2) / 2;

        String conceito;
        if (media >= 9.0) {
            conceito = "A";
        } else if (media >= 7.5) {
            conceito = "B";
        } else if (media >= 6.0) {
            conceito = "C";
        } else if (media >= 4.0) {
            conceito = "D";
        } else {
            conceito = "E";
        }

        System.out.println("Primeira nota: " + nota1);
        System.out.println("Segunda nota: " + nota2);
        System.out.println("Média: " + media);
        System.out.println("Conceito: " + conceito);

        if (conceito.equals("A") || conceito.equals("B") || conceito.equals("C")) {
            System.out.println("APROVADO");
        } else {
            System.out.println("REPROVADO");
        }
    }
}

15) Faça um Programa que peça os 3 lados de um triângulo. O programa deverá informar se os valores podem ser um triângulo. Indique, caso os lados formem um triângulo, se o mesmo é: equilátero, isósceles ou escaleno.
Dicas:
Três lados formam um triângulo quando a soma de quaisquer dois lados for maior que o terceiro;
Triângulo Equilátero: três lados iguais;
Triângulo Isósceles: quaisquer dois lados iguais;
Triângulo Escaleno: três lados diferentes;

import java.util.Scanner;

public class VerificacaoTriangulo {
  
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite o valor do primeiro lado do triângulo: ");
        double lado1 = scanner.nextDouble();

        System.out.print("Digite o valor do segundo lado do triângulo: ");
        double lado2 = scanner.nextDouble();

        System.out.print("Digite o valor do terceiro lado do triângulo: ");
        double lado3 = scanner.nextDouble();

        if (verificarTriangulo(lado1, lado2, lado3)) {
            if (lado1 == lado2 && lado1 == lado3) {
                System.out.println("Triângulo Equilátero");
            } else if (lado1 == lado2 || lado1 == lado3 || lado2 == lado3) {
                System.out.println("Triângulo Isósceles");
            } else {
                System.out.println("Triângulo Escaleno");
            }
        } else {
            System.out.println("Os valores informados não formam um triângulo.");
        }
    }

    public static boolean verificarTriangulo(double lado1, double lado2, double lado3) {
        return lado1 + lado2 > lado3 && lado1 + lado3 > lado2 && lado2 + lado3 > lado1;
    }
}

16) Faça um programa que calcule as raízes de uma equação do segundo grau, na forma ax2 + bx + c. O programa deverá pedir os valores de a, b e c e fazer as consistências, informando ao usuário nas seguintes situações:
a. Se o usuário informar o valor de A igual a zero, a equação não é do segundo grau e o programa não deve fazer pedir os demais valores, sendo encerrado;
b. Se o delta calculado for negativo, a equação não possui raizes reais. Informe ao usuário e encerre o programa;
c. Se o delta calculado for igual a zero a equação possui apenas uma raiz real; informe-a ao usuário;
d. Se o delta for positivo, a equação possui duas raiz reais; informe-as ao usuário;

import java.util.Scanner;

public class CalculoRaizesEquacao {
  
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite o valor de a: ");
        double a = scanner.nextDouble();

        if (a == 0) {
            System.out.println("A equação não é do segundo grau.");
            return; // Encerra o programa
        }

        System.out.print("Digite o valor de b: ");
        double b = scanner.nextDouble();

        System.out.print("Digite o valor de c: ");
        double c = scanner.nextDouble();

        double delta = calcularDelta(a, b, c);

        if (delta < 0) {
            System.out.println("A equação não possui raízes reais.");
        } else if (delta == 0) {
            double raiz = -b / (2 * a);
            System.out.println("A equação possui uma raiz real: " + raiz);
        } else {
            double raiz1 = (-b + Math.sqrt(delta)) / (2 * a);
            double raiz2 = (-b - Math.sqrt(delta)) / (2 * a);
            System.out.println("A equação possui duas raízes reais:");
            System.out.println("Raiz 1: " + raiz1);
            System.out.println("Raiz 2: " + raiz2);
        }
    }

    public static double calcularDelta(double a, double b, double c) {
        return b * b - 4 * a * c;
    }
}

17) Faça um Programa que peça um número correspondente a um determinado ano e em seguida informe se este ano é ou não bissexto.

import java.util.Scanner;

public class VerificacaoAnoBissexto {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite um ano: ");
        int ano = scanner.nextInt();

        if (verificarAnoBissexto(ano)) {
            System.out.println(ano + " é um ano bissexto.");
        } else {
            System.out.println(ano + " não é um ano bissexto.");
        }
    }

    public static boolean verificarAnoBissexto(int ano) {
        if ((ano % 4 == 0 && ano % 100 != 0) || ano % 400 == 0) {
            return true;
        }
        return false;
    }
}

18) Faça um Programa que peça uma data no formato dd/mm/aaaa e determine se a mesma é uma data válida.

import java.util.Scanner;

public class VerificacaoData {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite uma data no formato dd/mm/aaaa: ");
        String data = scanner.nextLine();

        if (verificarDataValida(data)) {
            System.out.println("A data " + data + " é válida.");
        } else {
            System.out.println("A data " + data + " não é válida.");
        }
    }

    public static boolean verificarDataValida(String data) {
        String[] partes = data.split("/");

        if (partes.length != 3) {
            return false;
        }

        int dia, mes, ano;

        try {
            dia = Integer.parseInt(partes[0]);
            mes = Integer.parseInt(partes[1]);
            ano = Integer.parseInt(partes[2]);
        } catch (NumberFormatException e) {
            return false;
        }

        if (dia < 1 || dia > 31 || mes < 1 || mes > 12 || ano < 1) {
            return false;
        }

        boolean bissexto = (ano % 4 == 0 && ano % 100 != 0) || ano % 400 == 0;

        if (mes == 2) {
            if (bissexto) {
                return dia <= 29;
            } else {
                return dia <= 28;
            }
        } else if (mes == 4 || mes == 6 || mes == 9 || mes == 11) {
            return dia <= 30;
        } else {
            return true;
        }
    }
}

19) Faça um Programa que leia um número inteiro menor que 1000 e imprima a quantidade de centenas, dezenas e unidades do mesmo.
Observando os termos no plural a colocação do "e", da vírgula entre outros. Exemplo:
326 = 3 centenas, 2 dezenas e 6 unidades
12 = 1 dezena e 2 unidades Testar com: 326, 300, 100, 320, 310,305, 301, 101, 311, 111, 25, 20, 10, 21, 11, 1, 7 e 16

import java.util.Scanner;

public class DecomposicaoNumerica {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite um número inteiro menor que 1000: ");
        int numero = scanner.nextInt();

        if (numero < 0 || numero >= 1000) {
            System.out.println("Número inválido. Digite um número inteiro menor que 1000.");
            return;
        }

        int centenas = numero / 100;
        int dezenas = (numero % 100) / 10;
        int unidades = (numero % 100) % 10;

        String resultado = "";

        if (centenas > 0) {
            resultado += centenas + " centena" + (centenas > 1 ? "s" : "");
        }

        if (dezenas > 0) {
            if (centenas > 0) {
                resultado += ", ";
            }
            resultado += dezenas + " dezena" + (dezenas > 1 ? "s" : "");
        }

        if (unidades > 0) {
            if (centenas > 0 || dezenas > 0) {
                resultado += " e ";
            }
            resultado += unidades + " unidade" + (unidades > 1 ? "s" : "");
        }

        System.out.println(resultado);
    }
}

20) Faça um Programa para leitura de três notas parciais de um aluno. O programa deve calcular a média alcançada por aluno e presentar:
a. A mensagem "Aprovado", se a média for maior ou igual a 7, com a respectiva média alcançada;
b. A mensagem "Reprovado", se a média for menor do que 7, com a respectiva média alcançada;
c. A mensagem "Aprovado com Distinção", se a média for igual a 10.

import java.util.Scanner;

public class MediaAluno {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Digite as três notas parciais do aluno:");
        double nota1 = scanner.nextDouble();
        double nota2 = scanner.nextDouble();
        double nota3 = scanner.nextDouble();

        double media = (nota1 + nota2 + nota3) / 3;

        System.out.println("Média alcançada: " + media);

        if (media == 10) {
            System.out.println("Aprovado com Distinção");
        } else if (media >= 7) {
            System.out.println("Aprovado");
        } else {
            System.out.println("Reprovado");
        }
    }
}

21) Faça um Programa para um caixa eletrônico. O programa deverá perguntar ao usuário a valor do saque e depois informar quantas notas de cada valor serão fornecidas. 
As notas disponíveis serão as de 1, 5, 10, 50 e 100 reais. O valor mínimo é de 10 reais e o máximo de 600 reais. O programa não deve se preocupar com a quantidade de notas existentes na máquina.
a. Exemplo 1: Para sacar a quantia de 256 reais, o programa fornece duas notas de 100, uma nota de 50, uma nota de 5 e uma nota de 1;
b. Exemplo 2: Para sacar a quantia de 399 reais, o programa fornece três notas de 100, uma nota de 50, quatro notas de 10, uma nota de 5 e quatro notas de 1.

import java.util.Scanner;

public class CaixaEletronico {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite o valor do saque (entre 10 e 600 reais): ");
        int valorSaque = scanner.nextInt();

        if (valorSaque < 10 || valorSaque > 600) {
            System.out.println("Valor inválido. O valor do saque deve ser entre 10 e 600 reais.");
            return;
        }

        int notas100 = valorSaque / 100;
        int notas50 = (valorSaque % 100) / 50;
        int notas10 = ((valorSaque % 100) % 50) / 10;
        int notas5 = (((valorSaque % 100) % 50) % 10) / 5;
        int notas1 = (((valorSaque % 100) % 50) % 10) % 5;

        System.out.println("Notas fornecidas:");
        System.out.println("R$100: " + notas100);
        System.out.println("R$50 : " + notas50);
        System.out.println("R$10 : " + notas10);
        System.out.println("R$5  : " + notas5);
        System.out.println("R$1  : " + notas1);
    }
}

22) Faça um Programa que peça um número inteiro e determine se ele é par ou impar. Dica: utilize o operador módulo (resto da divisão).

import java.util.Scanner;

public class ParOuImpar {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite um número inteiro: ");
        int numero = scanner.nextInt();

        if (numero % 2 == 0) {
            System.out.println("O número " + numero + " é par.");
        } else {
            System.out.println("O número " + numero + " é ímpar.");
        }
    }
}

23) Faça um Programa que peça um número e informe se o número é inteiro ou decimal. Dica: utilize uma função de arredondamento.

import java.util.Scanner;

public class InteiroOuDecimal {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite um número: ");
        double numero = scanner.nextDouble();

        if (numero == Math.floor(numero) || numero == Math.ceil(numero)) {
            System.out.println("O número é inteiro.");
        } else {
            System.out.println("O número é decimal.");
        }
    }
}

24) Faça um Programa que leia 2 números e em seguida pergunte ao usuário qual operação ele deseja realizar. O resultado da operação deve ser acompanhado de uma frase que diga se o número é:
a. par ou ímpar;
b. positivo ou negativo;
c. inteiro ou decimal.

import java.util.Scanner;

public class OperacoesNumeros {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite o primeiro número: ");
        double numero1 = scanner.nextDouble();

        System.out.print("Digite o segundo número: ");
        double numero2 = scanner.nextDouble();

        System.out.println("Escolha a operação a ser realizada:");
        System.out.println("1 - Soma");
        System.out.println("2 - Subtração");
        System.out.println("3 - Multiplicação");
        System.out.println("4 - Divisão");

        System.out.print("Digite o número da operação desejada: ");
        int operacao = scanner.nextInt();

        double resultado = 0;

        switch (operacao) {
            case 1:
                resultado = numero1 + numero2;
                System.out.println("Resultado da soma: " + resultado);
                break;
            case 2:
                resultado = numero1 - numero2;
                System.out.println("Resultado da subtração: " + resultado);
                break;
            case 3:
                resultado = numero1 * numero2;
                System.out.println("Resultado da multiplicação: " + resultado);
                break;
            case 4:
                if (numero2 != 0) {
                    resultado = numero1 / numero2;
                    System.out.println("Resultado da divisão: " + resultado);
                } else {
                    System.out.println("Divisão por zero não é permitida.");
                }
                break;
            default:
                System.out.println("Operação inválida.");
                break;
        }

        if (resultado % 2 == 0) {
            System.out.println("O resultado é par.");
        } else {
            System.out.println("O resultado é ímpar.");
        }

        if (resultado >= 0) {
            System.out.println("O resultado é positivo.");
        } else {
            System.out.println("O resultado é negativo.");
        }

        if (resultado == Math.floor(resultado) || resultado == Math.ceil(resultado)) {
            System.out.println("O resultado é inteiro.");
        } else {
            System.out.println("O resultado é decimal.");
        }
    }
}

25) Faça um programa que faça 5 perguntas para uma pessoa sobre um crime. As perguntas são:
a. "Telefonou para a vítima?"
b. "Esteve no local do crime?"
c. "Mora perto da vítima?"
d. "Devia para a vítima?"
e. "Já trabalhou com a vítima?" O programa deve no final emitir uma classificação sobre a participação da pessoa no crime. Se a pessoa responder positivamente a 2 questões ela deve ser classificada como "Suspeita", entre 3 e 4 como "Cúmplice" e 5 como "Assassino". Caso contrário, ele será classificado como "Inocente".

import java.util.Scanner;

public class ClassificacaoCrime {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Responda às perguntas abaixo sobre o crime:");
        System.out.print("Telefonou para a vítima? (s/n): ");
        String pergunta1 = scanner.nextLine();
        System.out.print("Esteve no local do crime? (s/n): ");
        String pergunta2 = scanner.nextLine();
        System.out.print("Mora perto da vítima? (s/n): ");
        String pergunta3 = scanner.nextLine();
        System.out.print("Devia para a vítima? (s/n): ");
        String pergunta4 = scanner.nextLine();
        System.out.print("Já trabalhou com a vítima? (s/n): ");
        String pergunta5 = scanner.nextLine();

        int respostasPositivas = 0;

        if (pergunta1.equalsIgnoreCase("s")) {
            respostasPositivas++;
        }
        if (pergunta2.equalsIgnoreCase("s")) {
            respostasPositivas++;
        }
        if (pergunta3.equalsIgnoreCase("s")) {
            respostasPositivas++;
        }
        if (pergunta4.equalsIgnoreCase("s")) {
            respostasPositivas++;
        }
        if (pergunta5.equalsIgnoreCase("s")) {
            respostasPositivas++;
        }

        if (respostasPositivas == 2) {
            System.out.println("Classificação: Suspeita");
        } else if (respostasPositivas >= 3 && respostasPositivas <= 4) {
            System.out.println("Classificação: Cúmplice");
        } else if (respostasPositivas == 5) {
            System.out.println("Classificação: Assassino");
        } else {
            System.out.println("Classificação: Inocente");
        }
    }
}

26) Um posto está vendendo combustíveis com a seguinte tabela de descontos:
a. Álcool:
b. até 20 litros, desconto de 3% por litro
c. acima de 20 litros, desconto de 5% por litro
d. Gasolina:
e. até 20 litros, desconto de 4% por litro
f. acima de 20 litros, desconto de 6% por litro Escreva um algoritmo que leia o número de litros vendidos, o tipo de combustível (codificado da seguinte forma: A-álcool, G-gasolina), calcule e imprima o valor a ser pago pelo cliente sabendo-se que o preço do litro da gasolina é R$ 2,50 o preço do litro do álcool é R$ 1,90.

import java.util.Scanner;

public class PostoCombustivel {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        double precoGasolina = 2.50;
        double precoAlcool = 1.90;

        System.out.print("Digite o número de litros vendidos: ");
        int litros = scanner.nextInt();

        System.out.print("Digite o tipo de combustível (A-álcool, G-gasolina): ");
        String tipoCombustivel = scanner.next();

        double valorAPagar = 0.0;

        if (tipoCombustivel.equalsIgnoreCase("A")) {
            if (litros <= 20) {
                valorAPagar = litros * (precoAlcool - (precoAlcool * 0.03));
            } else {
                valorAPagar = litros * (precoAlcool - (precoAlcool * 0.05));
            }
        } else if (tipoCombustivel.equalsIgnoreCase("G")) {
            if (litros <= 20) {
                valorAPagar = litros * (precoGasolina - (precoGasolina * 0.04));
            } else {
                valorAPagar = litros * (precoGasolina - (precoGasolina * 0.06));
            }
        }

        System.out.println("Valor a ser pago: R$" + valorAPagar);
    }
}

27) Uma fruteira está vendendo frutas com a seguinte tabela de preços:
                      Até 5 Kg           Acima de 5 Kg
Morango         R$ 2,50 por Kg          R$ 2,20 por Kg
Maçã            R$ 1,80 por Kg          R$ 1,50 por Kg
Se o cliente comprar mais de 8 Kg em frutas ou o valor total da compra ultrapassar R$ 25,00, receberá ainda um desconto de 10% sobre este total. Escreva um algoritmo para ler a quantidade (em Kg) de morangos e a quantidade (em Kg) de maças adquiridas e escreva o valor a ser pago pelo cliente.

import java.util.Scanner;

public class Fruteira {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        System.out.print("Digite a quantidade de morangos (em Kg): ");
        double morangosKg = input.nextDouble();

        System.out.print("Digite a quantidade de maçãs (em Kg): ");
        double macasKg = input.nextDouble();

        double valorMorangos = calcularValorFruta(morangosKg, 2.50, 2.20);
        double valorMacas = calcularValorFruta(macasKg, 1.80, 1.50);

        double valorTotal = valorMorangos + valorMacas;

        if (morangosKg + macasKg > 8 || valorTotal > 25.00) {
            valorTotal -= valorTotal * 0.10; // Aplicando o desconto de 10%
        }

        System.out.println("Valor a ser pago: R$" + valorTotal);
    }

    public static double calcularValorFruta(double quantidade, double precoAteCincoKg, double precoAcimaCincoKg) {
        if (quantidade <= 5) {
            return quantidade * precoAteCincoKg;
        } else {
            return quantidade * precoAcimaCincoKg;
        }
    }
}

28) O Hipermercado Tabajara está com uma promoção de carnes que é imperdível. Confira:
                      Até 5 Kg           Acima de 5 Kg
File Duplo      R$ 4,90 por Kg          R$ 5,80 por Kg
Alcatra         R$ 5,90 por Kg          R$ 6,80 por Kg
Picanha         R$ 6,90 por Kg          R$ 7,80 por Kg
Para atender a todos os clientes, cada cliente poderá levar apenas um dos tipos de carne da promoção, porém não há limites para a quantidade de carne por cliente. Se compra for feita no cartão Tabajara o cliente receberá ainda um desconto de 5% sobre o total da compra. Escreva um programa que peça o tipo e a quantidade de carne comprada pelo usuário e gere um cupom fiscal, contendo as informações da compra: tipo e quantidade de carne, preço total, tipo de pagamento, valor do desconto e valor a pagar.

import java.util.Scanner;

public class HipermercadoTabajara {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        System.out.println("Bem-vindo ao Hipermercado Tabajara!");
        System.out.println("Tipos de carne disponíveis na promoção:");
        System.out.println("1. File Duplo");
        System.out.println("2. Alcatra");
        System.out.println("3. Picanha");

        System.out.print("Digite o número correspondente ao tipo de carne escolhido: ");
        int tipoCarne = input.nextInt();

        System.out.print("Digite a quantidade de carne em quilogramas: ");
        double quantidade = input.nextDouble();

        double precoTotal = calcularPrecoTotal(tipoCarne, quantidade);
        boolean cartaoTabajara = false;
        double desconto = 0.0;

        System.out.print("Deseja realizar o pagamento com o cartão Tabajara? (S/N): ");
        String opcaoCartao = input.next();

        if (opcaoCartao.equalsIgnoreCase("S")) {
            cartaoTabajara = true;
            desconto = precoTotal * 0.05;
            precoTotal -= desconto;
        }

        System.out.println("Cupom Fiscal");
        System.out.println("Tipo de carne: " + obterDescricaoCarne(tipoCarne));
        System.out.println("Quantidade: " + quantidade + " Kg");
        System.out.println("Preço total: R$" + precoTotal);
        System.out.println("Tipo de pagamento: " + (cartaoTabajara ? "Cartão Tabajara" : "Outro"));
        System.out.println("Valor do desconto: R$" + desconto);
        System.out.println("Valor a pagar: R$" + precoTotal);
    }

    public static double calcularPrecoTotal(int tipoCarne, double quantidade) {
        double precoKg = 0.0;

        switch (tipoCarne) {
            case 1: // File Duplo
                if (quantidade <= 5) {
                    precoKg = 4.90;
                } else {
                    precoKg = 5.80;
                }
                break;
            case 2: // Alcatra
                if (quantidade <= 5) {
                    precoKg = 5.90;
                } else {
                    precoKg = 6.80;
                }
                break;
            case 3: // Picanha
                if (quantidade <= 5) {
                    precoKg = 6.90;
                } else {
                    precoKg = 7.80;
                }
                break;
            default:
                System.out.println("Opção inválida.");
                break;
        }

        return precoKg * quantidade;
    }

    public static String obterDescricaoCarne(int tipoCarne) {
        switch (tipoCarne) {
            case 1:
                return "File Duplo";
            case 2:
                return "Alcatra";
            case 3:
                return "Picanha";
            default:
                return "";
        }
    }
}

EXERCÍCIO - LISTA DE CLASSES

1) Classe Bola: Crie uma classe que modele uma bola:
a. Atributos: Cor, circunferência, material
b. Métodos: trocaCor e mostraCor

public class Bola {

   private String cor;
   double circunferencia;
   String material;

   Bola(String cor){
    this.cor = cor;
}

   void trocaCor(String novaCor){
     cor = novaCor;
}

   String mostraCor() {
    return cor;
   }

public static void main(String[]args){
        
 Bola bola = new Bola("Vermelho");
 
 System.out.println(bola.mostraCor());

 }

}

2) Classe Quadrado: Crie uma classe que modele um quadrado:
a. Atributos: Tamanho do lado
b. Métodos: Mudar valor do Lado, Retornar valor do Lado e calcular Área;

public class Quadrado {
    private double lado;

    public Quadrado(double lado) {
        this.lado = lado;
    }

    public void setLado(double lado) {
        this.lado = lado;
    }

    public double getLado() {
        return lado;
    }

    public double calcularArea() {
        return lado * lado;
    }
}

3) Classe Retangulo: Crie uma classe que modele um retangulo:
a. Atributos: LadoA, LadoB (ou Comprimento e Largura, ou Base e Altura, a escolher)
b. Métodos: Mudar valor dos lados, Retornar valor dos lados, calcular Área e calcular Perímetro;
c. Crie um programa que utilize esta classe. Ele deve pedir ao usuário que informe as medidades de um local. Depois, deve criar um objeto com as medidas e calcular a quantidade de pisos e de rodapés necessárias para o local.

public class Retangulo {
    private double ladoA;
    private double ladoB;

    public Retangulo(double ladoA, double ladoB) {
        this.ladoA = ladoA;
        this.ladoB = ladoB;
    }

    public void setLados(double ladoA, double ladoB) {
        this.ladoA = ladoA;
        this.ladoB = ladoB;
    }

    public double getLadoA() {
        return ladoA;
    }

    public double getLadoB() {
        return ladoB;
    }

    public double calcularArea() {
        return ladoA * ladoB;
    }

    public double calcularPerimetro() {
        return 2 * (ladoA + ladoB);
    }
}

4) Classe Pessoa: Crie uma classe que modele uma pessoa:
a. Atributos: nome, idade, peso e altura
b. Métodos: Envelhercer, engordar, emagrecer, crescer. Obs: Por padrão, a cada ano que nossa pessoa envelhece, sendo a idade dela menor que 21 anos, ela deve crescer 0,5 cm.

public class Pessoa {
    private String nome;
    private int idade;
    private double peso;
    private double altura;
    
    public Pessoa(String nome, int idade, double peso, double altura) {
        this.nome = nome;
        this.idade = idade;
        this.peso = peso;
        this.altura = altura;
    }
    
    public void envelhecer() {
        idade++;
        if (idade < 21) {
            crescer(0.5);
        }
    }
    
    public void engordar(double quantidade) {
        peso += quantidade;
    }
    
    public void emagrecer(double quantidade) {
        peso -= quantidade;
    }
    
    public void crescer(double quantidade) {
        altura += quantidade;
    }
    
    // Métodos para obter os valores dos atributos
    
    public String getNome() {
        return nome;
    }
    
    public int getIdade() {
        return idade;
    }
    
    public double getPeso() {
        return peso;
    }
    
    public double getAltura() {
        return altura;
    }
}

5) Classe Conta Corrente: Crie uma classe para implementar uma conta corrente. A classe deve possuir os seguintes atributos: número da conta, nome do correntista e saldo. 
Os métodos são os seguintes: alterarNome, depósito e saque; No construtor, saldo é opcional, com valor default zero e os demais atributos são obrigatórios.

public class ContaCorrente {
    private int numeroConta;
    private String nomeCorrentista;
    private double saldo;
    
    public ContaCorrente(int numeroConta, String nomeCorrentista) {
        this.numeroConta = numeroConta;
        this.nomeCorrentista = nomeCorrentista;
        this.saldo = 0.0;
    }
    
    public ContaCorrente(int numeroConta, String nomeCorrentista, double saldoInicial) {
        this.numeroConta = numeroConta;
        this.nomeCorrentista = nomeCorrentista;
        this.saldo = saldoInicial;
    }
    
    public void alterarNome(String novoNome) {
        this.nomeCorrentista = novoNome;
    }
    
    public void deposito(double valor) {
        saldo += valor;
    }
    
    public void saque(double valor) {
        if (saldo >= valor) {
            saldo -= valor;
        } else {
            System.out.println("Saldo insuficiente para efetuar o saque.");
        }
    }
    
    // Métodos para obter os valores dos atributos
    
    public int getNumeroConta() {
        return numeroConta;
    }
    
    public String getNomeCorrentista() {
        return nomeCorrentista;
    }
    
    public double getSaldo() {
        return saldo;
    }
}

6) Classe TV: Faça um programa que simule um televisor criando-o como um objeto. O usuário deve ser capaz de informar o número do canal e aumentar ou diminuir o volume. Certifique-se de que o número do canal e o nível do volume permanecem dentro de faixas válidas.

public class TV {
    private int canal;
    private int volume;
    
    public TV() {
        this.canal = 1; // Canal inicial
        this.volume = 50; // Volume inicial
    }
    
    public void mudarCanal(int novoCanal) {
        if (novoCanal >= 1 && novoCanal <= 100) {
            this.canal = novoCanal;
            System.out.println("Canal alterado para: " + novoCanal);
        } else {
            System.out.println("Canal inválido!");
        }
    }
    
    public void aumentarVolume() {
        if (volume < 100) {
            volume++;
            System.out.println("Volume aumentado para: " + volume);
        } else {
            System.out.println("Volume máximo atingido!");
        }
    }
    
    public void diminuirVolume() {
        if (volume > 0) {
            volume--;
            System.out.println("Volume diminuído para: " + volume);
        } else {
            System.out.println("Volume mínimo atingido!");
        }
    }
    
    public void status() {
        System.out.println("TV - Canal: " + canal + " | Volume: " + volume);
    }
}

7) Classe Bichinho Virtual:Crie uma classe que modele um Tamagushi (Bichinho Eletrônico):
a. Atributos: Nome, Fome, Saúde e Idade b. Métodos: Alterar Nome, Fome, Saúde e Idade; Retornar Nome, Fome, Saúde e Idade Obs: Existe mais uma informação que devemos levar em consideração, o Humor do nosso tamagushi, este humor é uma combinação entre os atributos Fome e Saúde, ou seja, um campo calculado, então não devemos criar um atributo para armazenar esta informação por que ela pode ser calculada a qualquer momento.

public class BichinhoVirtual {
    private String nome;
    private int fome;
    private int saude;
    private int idade;
    
    public BichinhoVirtual(String nome) {
        this.nome = nome;
        this.fome = 0;
        this.saude = 100;
        this.idade = 0;
    }
    
    public void alterarNome(String novoNome) {
        this.nome = novoNome;
    }
    
    public void alterarFome(int novaFome) {
        this.fome = novaFome;
    }
    
    public void alterarSaude(int novaSaude) {
        this.saude = novaSaude;
    }
    
    public void alterarIdade(int novaIdade) {
        this.idade = novaIdade;
    }
    
    public String retornarNome() {
        return nome;
    }
    
    public int retornarFome() {
        return fome;
    }
    
    public int retornarSaude() {
        return saude;
    }
    
    public int retornarIdade() {
        return idade;
    }
    
    public int calcularHumor() {
        return (fome + saude) / 2;
    }
}

8) Classe Macaco: Desenvolva uma classe Macaco,que possua os atributos nome e bucho (estomago) e pelo menos os métodos comer(), verBucho() e digerir(). Faça um programa ou teste interativamente, criando pelo menos dois macacos, alimentando-os com pelo menos 3 alimentos diferentes e verificando o conteúdo do estomago a cada refeição. Experimente fazer com que um macaco coma o outro. É possível criar um macaco canibal?

public class Macaco {
    private String nome;
    private String bucho;
    
    public Macaco(String nome) {
        this.nome = nome;
        this.bucho = "";
    }
    
    public void comer(String alimento) {
        if (bucho.isEmpty()) {
            bucho = alimento;
        } else {
            bucho += ", " + alimento;
        }
    }
    
    public void verBucho() {
        if (bucho.isEmpty()) {
            System.out.println("O estômago de " + nome + " está vazio.");
        } else {
            System.out.println("O estômago de " + nome + " contém: " + bucho);
        }
    }
    
    public void digerir() {
        if (bucho.isEmpty()) {
            System.out.println(nome + " não tem nada para digerir.");
        } else {
            System.out.println(nome + " está digerindo: " + bucho);
            bucho = "";
        }
    }
}

9) Classe Ponto e Retangulo: Faça um programa completo utilizando funções e classes que:
a. Possua uma classe chamada Ponto, com os atributos x e y.
b. Possua uma classe chamada Retangulo, com os atributos largura e altura.
c. Possua uma função para imprimir os valores da classe Ponto
d. Possua uma função para encontrar o centro de um Retângulo.
e. Você deve criar alguns objetos da classe Retangulo.
f. Cada objeto deve ter um vértice de partida, por exemplo, o vértice inferior esquerdo do retângulo, que deve ser um objeto da classe Ponto.
g. A função para encontrar o centro do retângulo deve retornar o valor para um objeto do tipo ponto que indique os valores de x e y para o centro do objeto.
h. O valor do centro do objeto deve ser mostrado na tela
i. Crie um menu para alterar os valores do retângulo e imprimir o centro deste retângulo.

import java.util.Scanner;

class Ponto {
    private double x;
    private double y;

    public Ponto(double x, double y) {
        this.x = x;
        this.y = y;
    }

    public void imprimir() {
        System.out.println("Ponto: (" + x + ", " + y + ")");
    }
}

class Retangulo {
    private Ponto ponto;
    private double largura;
    private double altura;

    public Retangulo(Ponto ponto, double largura, double altura) {
        this.ponto = ponto;
        this.largura = largura;
        this.altura = altura;
    }

    public Ponto encontrarCentro() {
        double centroX = ponto.getX() + largura / 2;
        double centroY = ponto.getY() + altura / 2;
        return new Ponto(centroX, centroY);
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Criação dos objetos Retangulo
        Ponto ponto1 = new Ponto(1, 1);
        Retangulo retangulo1 = new Retangulo(ponto1, 5, 3);

        Ponto ponto2 = new Ponto(-2, -2);
        Retangulo retangulo2 = new Retangulo(ponto2, 4, 2);

        // Menu interativo
        int opcao = 0;
        while (opcao != 3) {
            System.out.println("\n===== MENU =====");
            System.out.println("1. Alterar retângulo");
            System.out.println("2. Imprimir centro do retângulo");
            System.out.println("3. Sair");

            System.out.print("Digite a opção desejada: ");
            opcao = scanner.nextInt();

            if (opcao == 1) {
                System.out.print("Digite o número do retângulo (1 ou 2): ");
                int retanguloNum = scanner.nextInt();
                if (retanguloNum == 1) {
                    alterarRetangulo(retangulo1, scanner);
                } else if (retanguloNum == 2) {
                    alterarRetangulo(retangulo2, scanner);
                } else {
                    System.out.println("Número de retângulo inválido!");
                }
            } else if (opcao == 2) {
                System.out.print("Digite o número do retângulo (1 ou 2): ");
                int retanguloNum = scanner.nextInt();
                if (retanguloNum == 1) {
                    imprimirCentro(retangulo1);
                } else if (retanguloNum == 2) {
                    imprimirCentro(retangulo2);
                } else {
                    System.out.println("Número de retângulo inválido!");
                }
            } else if (opcao == 3) {
                System.out.println("Encerrando o programa...");
            } else {
                System.out.println("Opção inválida!");
            }
        }

        scanner.close();
    }

    public static void alterarRetangulo(Retangulo retangulo, Scanner scanner) {
        System.out.print("Digite o novo valor para o ponto x do retângulo: ");
        double novoX = scanner.nextDouble();
        System.out.print("Digite o novo valor para o ponto y do retângulo: ");
        double novoY = scanner.nextDouble();
        System.out.print("Digite a nova largura do retângulo: ");
        double novaLargura = scanner.nextDouble();
        System.out.print("Digite a nova altura do retângulo: ");
        double novaAltura = scanner.nextDouble();

        retangulo.getPonto().setX(novoX);
        retangulo.getPonto().setY(novoY);
        retangulo.setLargura(novaLargura);
        retangulo.setAltura(novaAltura);
    }

    public static void imprimirCentro(Retangulo retangulo) {
        Ponto centro = retangulo.encontrarCentro();
        centro.imprimir();
    }
}

10) Classe Bomba de Combustível: Faça um programa completo utilizando classes e métodos que:
a. Possua uma classe chamada bombaCombustível, com no mínimo esses atributos:
i. tipoCombustivel.
ii. valorLitro
iii. quantidadeCombustivel
b. Possua no mínimo esses métodos:
i. abastecerPorValor( ) – método onde é informado o valor a ser abastecido e mostra a quantidade de litros que foi colocada no veículo
ii. abastecerPorLitro( ) – método onde é informado a quantidade em litros de combustível e mostra o valor a ser pago pelo cliente.
iii. alterarValor( ) – altera o valor do litro do combustível.
iv. alterarCombustivel( ) – altera o tipo do combustível.
v. alterarQuantidadeCombustivel( ) – altera a quantidade de combustível restante na bomba.
OBS: Sempre que acontecer um abastecimento é necessário atualizar a quantidade de combustível total na bomba.

import java.util.Scanner;

class BombaCombustivel {
    private String tipoCombustivel;
    private double valorLitro;
    private double quantidadeCombustivel;

    public BombaCombustivel(String tipoCombustivel, double valorLitro, double quantidadeCombustivel) {
        this.tipoCombustivel = tipoCombustivel;
        this.valorLitro = valorLitro;
        this.quantidadeCombustivel = quantidadeCombustivel;
    }

    public void abastecerPorValor(double valor) {
        double quantidadeAbastecida = valor / valorLitro;
        if (quantidadeAbastecida <= quantidadeCombustivel) {
            quantidadeCombustivel -= quantidadeAbastecida;
            System.out.println("Abastecimento realizado: " + quantidadeAbastecida + " litros");
        } else {
            System.out.println("Quantidade insuficiente de combustível na bomba!");
        }
    }

    public void abastecerPorLitro(double quantidadeLitros) {
        double valorPagar = quantidadeLitros * valorLitro;
        if (quantidadeLitros <= quantidadeCombustivel) {
            quantidadeCombustivel -= quantidadeLitros;
            System.out.println("Valor a pagar: R$" + valorPagar);
        } else {
            System.out.println("Quantidade insuficiente de combustível na bomba!");
        }
    }

    public void alterarValor(double novoValor) {
        valorLitro = novoValor;
    }

    public void alterarCombustivel(String novoCombustivel) {
        tipoCombustivel = novoCombustivel;
    }

    public void alterarQuantidadeCombustivel(double novaQuantidade) {
        quantidadeCombustivel = novaQuantidade;
    }
}

public class Main {
    public static void main(String[] args) {
        BombaCombustivel bomba = new BombaCombustivel("Gasolina", 4.5, 1000);

        Scanner scanner = new Scanner(System.in);
        int opcao = 0;

        while (opcao != 5) {
            System.out.println("\n===== MENU =====");
            System.out.println("1. Abastecer por valor");
            System.out.println("2. Abastecer por litro");
            System.out.println("3. Alterar valor do litro");
            System.out.println("4. Alterar tipo de combustível");
            System.out.println("5. Sair");

            System.out.print("Digite a opção desejada: ");
            opcao = scanner.nextInt();

            switch (opcao) {
                case 1:
                    System.out.print("Digite o valor a ser abastecido: R$");
                    double valorAbastecer = scanner.nextDouble();
                    bomba.abastecerPorValor(valorAbastecer);
                    break;
                case 2:
                    System.out.print("Digite a quantidade em litros a ser abastecida: ");
                    double quantidadeLitros = scanner.nextDouble();
                    bomba.abastecerPorLitro(quantidadeLitros);
                    break;
                case 3:
                    System.out.print("Digite o novo valor do litro: R$");
                    double novoValor = scanner.nextDouble();
                    bomba.alterarValor(novoValor);
                    break;
                case 4:
                    System.out.print("Digite o novo tipo de combustível: ");
                    scanner.nextLine(); // Limpar o buffer do scanner
                    String novoCombustivel = scanner.nextLine();
                    bomba.alterarCombustivel(novoCombustivel);
                    break;
                case 5:
                    System.out.println("Encerrando o programa...");
                    break;
                default:
                    System.out.println("Opção inválida!");
                    break;
            }
        }
    }
}

11) Classe carro: Implemente uma classe chamada Carro com as seguintes propriedades:

a. Um veículo tem um certo consumo de combustível (medidos em km / litro) e uma certa quantidade de combustível no tanque.
b. O consumo é especificado no construtor e o nível de combustível inicial é 0.
c. Forneça um método andar( ) que simule o ato de dirigir o veículo por uma certa distância, reduzindo o nível de combustível no tanque de gasolina.
d. Forneça um método obterGasolina( ), que retorna o nível atual de combustível.
e. Forneça um método adicionarGasolina( ), para abastecer o tanque. Exemplo de uso:
meuFusca = Carro(15);           # 15 quilômetros por litro de combustível. 
meuFusca.adicionarGasolina(20); # abastece com 20 litros de combustível. 
meuFusca.andar(100);            # anda 100 quilômetros.
meuFusca.obterGasolina()        # Imprime o combustível que resta no tanque.

class Carro {
    private double consumoCombustivel;
    private double nivelCombustivel;

    public Carro(double consumoCombustivel) {
        this.consumoCombustivel = consumoCombustivel;
        this.nivelCombustivel = 0;
    }

    public void andar(double distancia) {
        double combustivelNecessario = distancia / consumoCombustivel;
        if (combustivelNecessario <= nivelCombustivel) {
            nivelCombustivel -= combustivelNecessario;
            System.out.println("O carro percorreu " + distancia + " km.");
        } else {
            System.out.println("Combustível insuficiente para percorrer essa distância!");
        }
    }

    public double obterGasolina() {
        return nivelCombustivel;
    }

    public void adicionarGasolina(double quantidade) {
        nivelCombustivel += quantidade;
        System.out.println("Abastecimento realizado: " + quantidade + " litros.");
    }
}

public class Main {
    public static void main(String[] args) {
        Carro meuFusca = new Carro(15);
        meuFusca.adicionarGasolina(20);
        meuFusca.andar(100);
        double nivelGasolina = meuFusca.obterGasolina();
        System.out.println("Nível de gasolina restante: " + nivelGasolina + " litros.");
    }
}

12) Classe Conta de Investimento: Faça uma classe contaInvestimento que seja semelhante a classe contaBancaria, com a diferença de que se adicione um atributo taxaJuros.
Forneça um construtor que configure tanto o saldo inicial como a taxa de juros. Forneça um método adicioneJuros (sem parâmetro explícito) que adicione juros à conta. Escreva um programa que construa uma poupança com um saldo inicial de R$1000,00 e uma taxa de juros de 10%. 
Depois aplique o método adicioneJuros() cinco vezes e imprime o saldo resultante.

class ContaInvestimento {
    private double saldo;
    private double taxaJuros;

    public ContaInvestimento(double saldoInicial, double taxaJuros) {
        this.saldo = saldoInicial;
        this.taxaJuros = taxaJuros;
    }

    public void adicioneJuros() {
        double juros = saldo * (taxaJuros / 100);
        saldo += juros;
    }

    public double getSaldo() {
        return saldo;
    }
}

public class Main {
    public static void main(String[] args) {
        ContaInvestimento poupanca = new ContaInvestimento(1000.00, 10);

        for (int i = 0; i < 5; i++) {
            poupanca.adicioneJuros();
        }

        double saldoFinal = poupanca.getSaldo();
        System.out.println("Saldo final: R$" + saldoFinal);
    }
}

13) Classe Funcionário: Implemente a classe Funcionário. Um empregado tem um nome (um string) e um salário(um double). Escreva um construtor com dois parâmetros (nome e salário) e métodos para devolver nome e salário. Escreva um pequeno programa que teste sua classe.

class Funcionario {
    private String nome;
    private double salario;

    public Funcionario(String nome, double salario) {
        this.nome = nome;
        this.salario = salario;
    }

    public String getNome() {
        return nome;
    }

    public double getSalario() {
        return salario;
    }
}

public class Main {
    public static void main(String[] args) {
        Funcionario funcionario = new Funcionario("João", 2500.00);

        System.out.println("Nome do funcionário: " + funcionario.getNome());
        System.out.println("Salário do funcionário: R$" + funcionario.getSalario());
    }
}

14) Aprimore a classe do exercício anterior para adicionar o método aumentarSalario (porcentualDeAumento) que aumente o salário do funcionário em uma certa porcentagem.
  harry=funcionário("Harry",25000)
  harry.aumentarSalario(10)

class Funcionario {
    private String nome;
    private double salario;

    public Funcionario(String nome, double salario) {
        this.nome = nome;
        this.salario = salario;
    }

    public String getNome() {
        return nome;
    }

    public double getSalario() {
        return salario;
    }

    public void aumentarSalario(double porcentualDeAumento) {
        double aumento = salario * (porcentualDeAumento / 100);
        salario += aumento;
    }
}

public class Main {
    public static void main(String[] args) {
        Funcionario funcionario = new Funcionario("João", 2500.00);

        System.out.println("Nome do funcionário: " + funcionario.getNome());
        System.out.println("Salário do funcionário: R$" + funcionario.getSalario());

        funcionario.aumentarSalario(10); // Aumenta o salário em 10%

        System.out.println("Novo salário do funcionário: R$" + funcionario.getSalario());
    }
}

15) Classe Bichinho Virtual++: Melhore o programa do bichinho virtual, permitindo que o usuário especifique quanto de comida ele fornece ao bichinho e por quanto tempo ele brinca com o bichinho. 
Faça com que estes valores afetem quão rapidamente os níveis de fome e tédio caem.

class BichinhoVirtual {
    private String nome;
    private int fome;
    private int tedio;

    public BichinhoVirtual(String nome) {
        this.nome = nome;
        this.fome = 50;
        this.tedio = 50;
    }

    public void alimentar(int quantidadeComida) {
        fome -= quantidadeComida;
        if (fome < 0) {
            fome = 0;
        }
    }

    public void brincar(int tempoBrincadeira) {
        tedio -= tempoBrincadeira;
        if (tedio < 0) {
            tedio = 0;
        }
    }

    public void passarTempo(int horas) {
        fome += horas * 5;
        if (fome > 100) {
            fome = 100;
        }
        tedio += horas * 10;
        if (tedio > 100) {
            tedio = 100;
        }
    }

    public void exibirStatus() {
        System.out.println("Nome: " + nome);
        System.out.println("Nível de Fome: " + fome);
        System.out.println("Nível de Tédio: " + tedio);
    }
}

public class Main {
    public static void main(String[] args) {
        BichinhoVirtual bichinho = new BichinhoVirtual("Bob");

        bichinho.alimentar(30); // Fornece 30 unidades de comida
        bichinho.brincar(20); // Brinca por 20 minutos

        bichinho.passarTempo(3); // Simula a passagem de 3 horas

        bichinho.exibirStatus();
    }
}

16) Crie uma "porta escondida" no programa do programa do bichinho virtual que mostre os valores exatos dos atributos do objeto. 
Consiga isto mostrando o objeto quando uma opção secreta, não listada no menu, for informada na escolha do usuário. Dica: acrescente um método especial str() à classe Bichinho.

import java.util.Scanner;

class BichinhoVirtual {
    private String nome;
    private int fome;
    private int tedio;

    public BichinhoVirtual(String nome) {
        this.nome = nome;
        this.fome = 50;
        this.tedio = 50;
    }

    public void alimentar(int quantidadeComida) {
        fome -= quantidadeComida;
        if (fome < 0) {
            fome = 0;
        }
    }

    public void brincar(int tempoBrincadeira) {
        tedio -= tempoBrincadeira;
        if (tedio < 0) {
            tedio = 0;
        }
    }

    public void passarTempo(int horas) {
        fome += horas * 5;
        if (fome > 100) {
            fome = 100;
        }
        tedio += horas * 10;
        if (tedio > 100) {
            tedio = 100;
        }
    }

    public void exibirStatus() {
        System.out.println("Nome: " + nome);
        System.out.println("Nível de Fome: " + fome);
        System.out.println("Nível de Tédio: " + tedio);
    }

    public String toString() {
        return "Nome: " + nome + "\nNível de Fome: " + fome + "\nNível de Tédio: " + tedio;
    }
}

public class Main {
    public static void main(String[] args) {
        BichinhoVirtual bichinho = new BichinhoVirtual("Bob");

        Scanner scanner = new Scanner(System.in);
        int opcao;

        do {
            exibirMenu();
            opcao = scanner.nextInt();

            switch (opcao) {
                case 1:
                    System.out.println("Digite a quantidade de comida fornecida: ");
                    int quantidadeComida = scanner.nextInt();
                    bichinho.alimentar(quantidadeComida);
                    break;
                case 2:
                    System.out.println("Digite o tempo de brincadeira: ");
                    int tempoBrincadeira = scanner.nextInt();
                    bichinho.brincar(tempoBrincadeira);
                    break;
                case 3:
                    System.out.println("Digite o tempo decorrido em horas: ");
                    int horas = scanner.nextInt();
                    bichinho.passarTempo(horas);
                    break;
                case 9:
                    System.out.println(bichinho.toString());
                    break;
                default:
                    System.out.println("Opção inválida!");
                    break;
            }

            System.out.println();

        } while (opcao != 0);

        System.out.println("Programa encerrado.");
        scanner.close();
    }

    public static void exibirMenu() {
        System.out.println("Menu:");
        System.out.println("1 - Alimentar o bichinho");
        System.out.println("2 - Brincar com o bichinho");
        System.out.println("3 - Passar tempo");
        System.out.println("9 - Exibir valores exatos do objeto (opção secreta)");
        System.out.println("0 - Sair");
        System.out.println("Digite a opção desejada: ");
    }
}

17) Crie uma Fazenda de Bichinhos instanciando vários objetos bichinho e mantendo o controle deles através de uma lista. 
Imite o funcionamento do programa básico, mas ao invés de exigis que o usuário tome conta de um único bichinho, exija que ele tome conta da fazenda inteira. Cada opção do menu deveria permitir que o usuário executasse uma ação para todos os bichinhos (alimentar todos os bichinhos, brincar com todos os bichinhos, ou ouvir a todos os bichinhos). 
Para tornar o programa mais interessante, dê para cada bichinho um nivel inicial aleatório de fome e tédio.

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

class BichinhoVirtual {
    private String nome;
    private int fome;
    private int tedio;

    public BichinhoVirtual(String nome, int fome, int tedio) {
        this.nome = nome;
        this.fome = fome;
        this.tedio = tedio;
    }

    public void alimentar() {
        fome -= 10;
        if (fome < 0) {
            fome = 0;
        }
    }

    public void brincar() {
        tedio -= 10;
        if (tedio < 0) {
            tedio = 0;
        }
    }

    public void ouvir() {
        System.out.println("Bichinho " + nome + " diz: Estou bem!");
    }

    public void passarTempo(int horas) {
        fome += horas * 5;
        if (fome > 100) {
            fome = 100;
        }
        tedio += horas * 10;
        if (tedio > 100) {
            tedio = 100;
        }
    }

    public void exibirStatus() {
        System.out.println("Bichinho: " + nome);
        System.out.println("Nível de Fome: " + fome);
        System.out.println("Nível de Tédio: " + tedio);
        System.out.println();
    }
}

public class FazendaDeBichinhos {
    private List<BichinhoVirtual> bichinhos;

    public FazendaDeBichinhos() {
        bichinhos = new ArrayList<>();
    }

    public void adicionarBichinho(BichinhoVirtual bichinho) {
        bichinhos.add(bichinho);
    }

    public void alimentarBichinhos() {
        for (BichinhoVirtual bichinho : bichinhos) {
            bichinho.alimentar();
        }
    }

    public void brincarComBichinhos() {
        for (BichinhoVirtual bichinho : bichinhos) {
            bichinho.brincar();
        }
    }

    public void ouvirBichinhos() {
        for (BichinhoVirtual bichinho : bichinhos) {
            bichinho.ouvir();
        }
    }

    public void passarTempo(int horas) {
        for (BichinhoVirtual bichinho : bichinhos) {
            bichinho.passarTempo(horas);
        }
    }

    public void exibirStatusBichinhos() {
        for (BichinhoVirtual bichinho : bichinhos) {
            bichinho.exibirStatus();
        }
    }

    public static void main(String[] args) {
        FazendaDeBichinhos fazenda = new FazendaDeBichinhos();
        Random random = new Random();

        fazenda.adicionarBichinho(new BichinhoVirtual("Bichinho 1", random.nextInt(50), random.nextInt(50)));
        fazenda.adicionarBichinho(new BichinhoVirtual("Bichinho 2", random.nextInt(50), random.nextInt(50)));
        fazenda.adicionarBichinho(new BichinhoVirtual("Bichinho 3", random.nextInt(50), random.nextInt(50)));

        Scanner scanner = new Scanner(System.in);

        int opcao;
        do {
            System.out.println("=== Fazenda de Bichinhos ===");
            System.out.println("1. Alimentar todos os bichinhos");
            System.out.println("2. Brincar com todos os bichinhos");
            System.out.println("3. Ouvir todos os bichinhos");
            System.out.println("4. Passar tempo na fazenda");
            System.out.println("5. Exibir status de todos os bichinhos");
            System.out.println("0. Sair");
            System.out.print("Escolha uma opção: ");
            opcao = scanner.nextInt();

            switch (opcao) {
                case 1:
                    fazenda.alimentarBichinhos();
                    System.out.println("Todos os bichinhos foram alimentados!");
                    break;
                case 2:
                    fazenda.brincarComBichinhos();
                    System.out.println("Todos os bichinhos brincaram!");
                    break;
                case 3:
                    fazenda.ouvirBichinhos();
                    break;
                case 4:
                    System.out.print("Digite o número de horas: ");
                    int horas = scanner.nextInt();
                    fazenda.passarTempo(horas);
                    System.out.println("Tempo passado na fazenda: " + horas + " horas");
                    break;
                case 5:
                    fazenda.exibirStatusBichinhos();
                    break;
                case 0:
                    System.out.println("Saindo...");
                    break;
                default:
                    System.out.println("Opção inválida! Tente novamente.");
            }

            System.out.println();
        } while (opcao != 0);
    }
}


